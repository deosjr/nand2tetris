// linked list, Fig 9.4 is a starting point

type list struct {
    car any
    cdr list
}

func new(car any, cdr list) list {
    l := list{}
    l.car = car
    l.cdr = cdr
    return l
}

func (l list) dispose() {
    var cdr list
    cdr = l.cdr
    if cdr != nil {
        cdr.dispose()
    }
    memory.dealloc(l)
    return
}

func (l list) append(x any) list {
    if l == nil {
        return list.new(x, nil)
    }
    var cdr list
    cdr = l.cdr
    if cdr != nil {
        l.cdr = cdr.append(x)
        return l
    }
    l.cdr = list.new(x, nil)
    return l
}
