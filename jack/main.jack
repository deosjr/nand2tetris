// main function of Jack, with a Golang flavor
func main() {
    math.init()
    screen.init()
    output.init()
    lisp.init()

    var ss sexpr

    // TODO: http://norvig.com/lispy.html
    // except I dont deal with floats (yet?) so pi = 3
    /*
    //input := "(begin (define r 10) (* pi (* r r)))"
    //input := "(if (> 10 20) (+ 1 1) (+ 3 3))"
    //input := "(begin (define circlearea (lambda (r) (* pi (* r r)))) (circlearea 3))"
    input := "(begin (define twice (lambda (x) (* 2 x))) (define repeat (lambda (f) (lambda (x) (f (f x))))) ((repeat twice) 10))"
    ss := lisp.parse(input)
    x = lisp.eval(ss)
    output.printInt(x) // 40
    output.println()
    */

    lisp.repl()
    return
}
