// Two more functions are considered part of sys
// but their implementation is given directly in 
// the translator, in assembly code
// These are call and return

function init
    // building the initial environment
    symbol 0
    special 0               // special(if)
    cons
    symbol 1
    special 1               // special(define)
    cons
    symbol 2
    special 2               // special(quote)
    cons
    symbol 3
    special 3               // special(set!)
    cons
    symbol 4
    special 4               // special(lambda)
    cons
    symbol 5
    special 5               // builtin(begin)
    cons
    symbol 6
    push label builtin.add
    builtin                 // builtin(add)
    cons
    symbol 7
    push label builtin.sub
    builtin                 // builtin(sub)
    cons
    symbol 8
    push label builtin.gt
    builtin                 // builtin(gt)
    cons
    symbol 9
    push label builtin.isnull
    builtin                 // builtin(null?)
    cons
    symbol 10
    push label builtin.readchar
    builtin                 // builtin(read-char)
    cons
    symbol 11
    push label builtin.display
    builtin                 // builtin(display)
    cons
    symbol 12
    push label builtin.cons
    builtin                 // builtin(cons)
    cons
    symbol 13
    push label builtin.car
    builtin                 // builtin(car)
    cons
    symbol 14
    push label builtin.cdr
    builtin                 // builtin(cdr)
    cons
    symbol 15
    push label builtin.eq
    builtin                 // builtin(eq)
    cons
    symbol 16
    push label builtin.writechar
    builtin                 // builtin(write-char)
    cons
    cons-on-empty
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    cons
    //pop environment
    //push environment
    push constant 0         // each func HAS to take one arg!
    call main.main
    goto end
